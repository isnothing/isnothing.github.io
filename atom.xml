<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>TAJPURE</title>
  <icon>https://www.gravatar.com/avatar/989b8c8f5e2ee73ea1d6e95475e40898</icon>
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://tajpure.com/"/>
  <updated>2019-07-05T01:55:22.000Z</updated>
  <id>https://tajpure.com/</id>
  
  <author>
    <name>tajpure</name>
    <email>tajpure@gmail.com</email>
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Ubuntu双显示器</title>
    <link href="https://tajpure.com/2015/11/08/ubuntu-dual-screen/"/>
    <id>https://tajpure.com/2015/11/08/ubuntu-dual-screen/</id>
    <published>2015-11-08T13:06:27.000Z</published>
    <updated>2019-07-05T01:55:22.000Z</updated>
    
    <content type="html"><![CDATA[<p>前不久在亚马逊上买了一块戴尔的显示器, 型号为U2414, 23.8寸, 用来作为笔记本的外接显示器用.本来一直觉得Ubuntu使用起来非常简单, 各种配置安装也非常方便. 可是终于在外接显示器上遇到了坑,最后经过一段时间的折腾, 终于完美地解决了双屏显示的问题. 现在对Linux在某些方面(例如硬件方面的兼容性)的易用性算是有了清楚的认识. 以下是对这次折腾经历的记录, 用来给其他遇到相同问题的人作为参考. 我的笔记本型号为ThinkPad T420, 独显为NVIDIA GeForce GT 520M (GF119M), 系统为Ubuntu 14.04 64位.</p><p>最开始我使用的是这款显示器自带的一根DP to Mini DP的连接线，但是在系统自带的设置里面不能检测到外接显示器, 并且外接显示器也一直没有信号输入.为了确定不是连接线的问题, 我又买了一根DP to DP的线进行尝试. 但还是检测不到外接显示器. 当我使用xrandr命令查看, 发现确实能够看到DP的连接信号, 但是系统设置里没有外接显示器. 稍微Google了一下, 发现Ubuntu自带的显卡驱动nouveau对外接显示器的支持并不好, 因此我决定换成NVIDIA的闭源驱动试试,在安装NVIDIA驱动之后, 外接显示器终于有信号了, 但是各种花屏比没有信号好不到哪里去. 又Google了一番后也没找到什么明确的解决办法.</p><p>最后发现在BIOS里将Display的Graphics Device选项从NVIDIA Optimus改成Discrete Graphics(独立显卡)之后就能用了, 完全不知道为什么. 不过之后又出现一个让人不爽的小问题, 就是笔记本屏幕的亮度不能修改,并且一直保持最高亮度. 这种情况让我在夜晚不得不关掉笔记本的屏幕, 不然会被亮瞎. 这个问题最后在askubuntu上找到了<a href="http://askubuntu.com/questions/228816/i-cannot-change-the-screen-brightness" target="_blank" rel="noopener">解决方案</a>,就是在/etc/X11/xorg.conf下为你的笔记本显示器的配置添上如下一行:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Option &quot;RegistryDwords&quot; &quot;EnableBrightnessControl=1&quot; immediately above EndSection</span><br></pre></td></tr></table></figure></p><p>reboot之后就可以调整笔记本显示器的亮度了.</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;前不久在亚马逊上买了一块戴尔的显示器, 型号为U2414, 23.8寸, 用来作为笔记本的外接显示器用.本来一直觉得Ubuntu使用起来非常简单, 各种配置安装也非常方便. 可是终于在外接显示器上遇到了坑,最后经过一段时间的折腾, 终于完美地解决了双屏显示的问题. 现在对L
      
    
    </summary>
    
    
      <category term="ubuntu" scheme="https://tajpure.com/tags/ubuntu/"/>
    
  </entry>
  
  <entry>
    <title>SSL证书的配置</title>
    <link href="https://tajpure.com/2015/01/18/ssl-config/"/>
    <id>https://tajpure.com/2015/01/18/ssl-config/</id>
    <published>2015-01-18T04:18:53.000Z</published>
    <updated>2019-07-05T01:55:22.000Z</updated>
    
    <content type="html"><![CDATA[<p>今天换VPS, 配置blog时又不免得重新reissue一下我的SSL证书. 记录一下流程, 以作备忘:<br>1,生成证书<br>首先在VPS制作一个private key:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">sudo openssl genrsa -des3 -out server.key 2048</span><br><span class="line">sudo openssl req -new -key server.key -out server.csr</span><br><span class="line"></span><br><span class="line">Country Name (2 letter code) [AU]:CN  #国家代码</span><br><span class="line">State or Province Name (full name) [Some-State]:Beijing #省份</span><br><span class="line">Locality Name (eg, city) []:Beijing  #城市</span><br><span class="line">Organization Name (eg, company) [Internet Widgits Pty Ltd]:Tajpure Ltd #公司名称</span><br><span class="line">Organizational Unit Name (eg, section) []:   #部门名称</span><br><span class="line">Common Name (e.g. server FQDN or YOUR name) []: www.tajpure.com                  </span><br><span class="line">Email Address []: tajpure@gmail.com  #管理员邮箱</span><br></pre></td></tr></table></figure></p><p>在NameCheap上reissue, 填入相关信息,在邮件里获取到证书.<br>获得的证书如下:</p><ul><li>XXX_com.crt</li><li>COMODORSADomainValidationSecureServerCA.crt</li><li>COMODORSAAddTrustCA.crt</li><li>AddTrustExternalCARoot.crt</li></ul><p>2,配置nginx</p><p>将获得的证书合并:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat XXX_com.crt COMODORSADomainValidationSecureServerCA.crt COMODORSAAddTrustCA.crt AddTrustExternalCARoot.crt &gt; XXX_com.crt</span><br></pre></td></tr></table></figure></p><p>如果你在之前生成私钥时设置了pass phase,你需要去掉它:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo cp server.key server.key.com</span><br><span class="line">sudo openssl rsa -in server.key.com -out server.key</span><br></pre></td></tr></table></figure></p><p>在nginx目录添加ssl文件夹,将你的证书XXX_com.crt与私钥server.key全部放入,在nginx.conf中配置如下:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">  listen 443;</span><br><span class="line">  server_name example.com;</span><br><span class="line"></span><br><span class="line">  root /var/www/blog;</span><br><span class="line">  index index.html index.htm;</span><br><span class="line"></span><br><span class="line">  ssl on;</span><br><span class="line">  ssl_certificate /etc/nginx/ssl/server.crt;</span><br><span class="line">  ssl_certificate_key /etc/nginx/ssl/server.key;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>强制使用https可以使用如下配置:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">return 301 https://$server_name$request_uri</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;今天换VPS, 配置blog时又不免得重新reissue一下我的SSL证书. 记录一下流程, 以作备忘:&lt;br&gt;1,生成证书&lt;br&gt;首先在VPS制作一个private key:&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;t
      
    
    </summary>
    
    
      <category term="nginx" scheme="https://tajpure.com/tags/nginx/"/>
    
  </entry>
  
  <entry>
    <title>CentOS7扩展源</title>
    <link href="https://tajpure.com/2014/11/05/CentOS7%E6%89%A9%E5%B1%95%E6%BA%90/"/>
    <id>https://tajpure.com/2014/11/05/CentOS7扩展源/</id>
    <published>2014-11-05T03:44:30.000Z</published>
    <updated>2019-07-05T01:55:22.000Z</updated>
    
    <content type="html"><![CDATA[<p>一不小心在CentOS7上安装了EPEL6的源,导致nginx一直装不上,报这个错误:<br>Error: Package: nginx-1.6.2-1.el6.ngx.x86_64 (nginx)<br>               Requires: libpcre.so.0()(64bit)<br>应该是源的问题,于是换了一个EPEL7的源,安装方式如下:</p><p>wget “<a href="https://dl.fedoraproject.org/pub/epel/7/x86_64/e/epel-release-7-2.noarch.rpm&quot;" target="_blank" rel="noopener">https://dl.fedoraproject.org/pub/epel/7/x86_64/e/epel-release-7-2.noarch.rpm&quot;</a><br>rpm -ivh epel-release-7-2.noarch.rpm<br>yum repolist all</p><p>再试一下yum install nginx,问题解决.</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;一不小心在CentOS7上安装了EPEL6的源,导致nginx一直装不上,报这个错误:&lt;br&gt;Error: Package: nginx-1.6.2-1.el6.ngx.x86_64 (nginx)&lt;br&gt;               Requires: libpcre.s
      
    
    </summary>
    
    
      <category term="linux" scheme="https://tajpure.com/tags/linux/"/>
    
      <category term="nginx" scheme="https://tajpure.com/tags/nginx/"/>
    
  </entry>
  
  <entry>
    <title>HN Special,一款Hacker News的界面优化插件</title>
    <link href="https://tajpure.com/2014/09/09/HN-Special,%E4%B8%80%E6%AC%BEHacker-News%E7%9A%84%E7%95%8C%E9%9D%A2%E4%BC%98%E5%8C%96%E6%8F%92%E4%BB%B6/"/>
    <id>https://tajpure.com/2014/09/09/HN-Special,一款Hacker-News的界面优化插件/</id>
    <published>2014-09-09T12:12:36.000Z</published>
    <updated>2019-07-05T01:55:22.000Z</updated>
    
    <content type="html"><![CDATA[<p>Hacker News作为著名创业孵化器Y Combinator的新闻站点，上面聚集了一大批优秀的程序员与十分优质的内容，可是它的界面实在是不够友好。例如：<br> <img src="../../../../image/HN_before.png" alt="之前"><br><a id="more"></a></p><p>由于内容全部堆积在一起，使用浏览器查看时觉得十分沉重，体验不好。为了解决这个问题，我觉得可以利用浏览器插件对其界面进行优化。于是下意识的搜索了相应的插件，于是发现了这个：HN Special，这个插件十分好用，作者添加的特性如下：</p><ul><li>A modern looking visual theme</li><li>Infinite scrolling</li><li>Open links in new tab</li><li>More accurate domain names</li><li>Comment folding</li><li>Mark as read</li><li>Sticky header</li><li>Grey visited links</li><li>User information tooltips</li></ul><p>使用该插件之后的界面：<br> <img src="../../../../image/HN_after.png" alt="之后"></p><p>界面清爽了很多，另外发现该作者竟然也是风靡全球的游戏”2048”的作者（Gabriele Cirulli），并且还非常年轻。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Hacker News作为著名创业孵化器Y Combinator的新闻站点，上面聚集了一大批优秀的程序员与十分优质的内容，可是它的界面实在是不够友好。例如：&lt;br&gt; &lt;img src=&quot;../../../../image/HN_before.png&quot; alt=&quot;之前&quot;&gt;&lt;br&gt;
    
    </summary>
    
    
      <category term="chrome插件" scheme="https://tajpure.com/tags/chrome%E6%8F%92%E4%BB%B6/"/>
    
      <category term="Hacker News" scheme="https://tajpure.com/tags/Hacker-News/"/>
    
  </entry>
  
  <entry>
    <title>Vimium的简单试用</title>
    <link href="https://tajpure.com/2014/09/09/Vimium%E7%9A%84%E7%AE%80%E5%8D%95%E8%AF%95%E7%94%A8/"/>
    <id>https://tajpure.com/2014/09/09/Vimium的简单试用/</id>
    <published>2014-09-09T12:11:37.000Z</published>
    <updated>2019-07-05T01:55:22.000Z</updated>
    
    <content type="html"><![CDATA[<p>在浏览网页遇到单页很长的页面时，总是觉得食指因为长时间转动鼠标滚球而变得疼痛，而且键盘与鼠标之间的移动无形之中也浪费了很多时间。因此，我想找一个能够让我完全使用键盘来操作浏览器的软件。</p><p>在google了一会之后，我发现chrome下的一款插件能够很好地满足我的要求——Vimium。这款插件可以直接在chrome商店里找到，就不另给地址了。<br>安装好了Vimium之后，便开始简单的使用。<br><a id="more"></a></p><p>首先是了解一些基础的组合键功能，大致的清单如下：<br><img src="../../../../image/vimium_keyboard.png" alt="keyboard"></p><p>其中类似<c-u>键指的是ctrl+u键，和vim中的表示一样</c-u></p><p>这些功能基本上能够让我完全脱离鼠标了，下面是一张使用时的截图：</p><p><img src="../../../../image/vimium_screenshot.png" alt="screenshot"></p><p>想跳转至哪个链接，直接在键盘输入相应的字符就可以了。推荐在vimium配置中，将用于链接的提示字符(Characters used for link hints)中的f替换成y或者其他提示字符串中没有的字符，这样你就可以按一下f出现链接提示字符再按一下取消，便于操作。</p><p>使用Vimium之后浏览网页就不再需要鼠标了，不过好像只有firefox与chrome支持类似的插件，其它浏览器就不知道了。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;在浏览网页遇到单页很长的页面时，总是觉得食指因为长时间转动鼠标滚球而变得疼痛，而且键盘与鼠标之间的移动无形之中也浪费了很多时间。因此，我想找一个能够让我完全使用键盘来操作浏览器的软件。&lt;/p&gt;
&lt;p&gt;在google了一会之后，我发现chrome下的一款插件能够很好地满足我的要求——Vimium。这款插件可以直接在chrome商店里找到，就不另给地址了。&lt;br&gt;安装好了Vimium之后，便开始简单的使用。&lt;br&gt;
    
    </summary>
    
    
      <category term="chrome插件" scheme="https://tajpure.com/tags/chrome%E6%8F%92%E4%BB%B6/"/>
    
  </entry>
  
  <entry>
    <title>使用Micorsoft Visual Studio入门LLVM</title>
    <link href="https://tajpure.com/2014/08/30/%E4%BD%BF%E7%94%A8Micorsoft-Visual-Studio%E5%85%A5%E9%97%A8LLVM/"/>
    <id>https://tajpure.com/2014/08/30/使用Micorsoft-Visual-Studio入门LLVM/</id>
    <published>2014-08-29T16:03:55.000Z</published>
    <updated>2019-07-05T01:55:22.000Z</updated>
    
    <content type="html"><![CDATA[<p>这是一篇关于如何在Windows平台下使用LLVM的文章，由tajpure转述自 <a href="http://llvm.org/docs/GettingStartedVS.html#id2" target="_blank" rel="noopener">LLVM官网</a>.</p><p>##概述##<br>LLVM，命名最早取自底层虚拟机器（Low Level Virtual Machine）的缩写。由很多项目组成，它是一个编译器的基础框架，提供完整的编译系统中间层。使用Visual Studio而不是使用mingw或cygwin来编译LLVM。这是因为vc能编译出更原生的程序，只依赖于VC的dll。<br><a id="more"></a></p><p>##依赖##<br>在你开始使用LLVM系统时，你需要看一下如下依赖。提前了解你需要的硬件和软件，会使你的麻烦减少。</p><p>###硬件要求###</p><p>1、一个能够良好运行Visual Studio2012的系统</p><p>2、LLVM的安装将会占用3GB左右的空间</p><p>###软件要求###</p><p>1、Visual Studio 2012及更高版本</p><p>2、<a href="http://www.cmake.org/" target="_blank" rel="noopener">CMake</a>，用它来产生LLVM最新的项目文件</p><p>3、如果你想运行LLVM测试文件，你需要安装<a href="http://www.python.org/" target="_blank" rel="noopener">Python</a>（2.4-2.7版本测试可运行）、<a href="http://gnuwin32.sourceforge.net/" target="_blank" rel="noopener">DnuWin32</a></p><p>4、不要安装LLVM在目录名包含空格的目录下，这会导致配置失败</p><p>##开始##<br>下面是快速开始使用LLVM的一份简短实例：</p><p>1、阅读文档</p><p>2、认真地再读一遍文档</p><p>3、记住你已经被两次提醒去阅读文档</p><p>4、获取LLVM源码</p><ul><li>通过下载的文件获取<ul><li>cd <where-you-want-llvm-to-live></where-you-want-llvm-to-live></li><li>gunzip –stdout llvm-VERSION.tar.gz | tar -xvf -(or use WinZip)</li><li>cd llvm</li></ul></li><li>通过匿名SVN获取<ul><li>cd <where-you-want-llvm-to-live></where-you-want-llvm-to-live></li><li>svn co <a href="http://llvm.org/svn/llvm-project/llvm/trunk" target="_blank" rel="noopener">http://llvm.org/svn/llvm-project/llvm/trunk</a> llvm</li><li>cd llvm </li></ul></li><li>通过Git获取<ul><li>cd <where-you-want-llvm-to-live></where-you-want-llvm-to-live></li><li>git clone <a href="http://llvm.org/git/llvm.git" target="_blank" rel="noopener">http://llvm.org/git/llvm.git</a></li></ul></li></ul><p>5、使用CMake产生LLVM最新的项目文件：</p><ul><li><p>CMake安装完成后。CMake最简单的使用方法是通过CMake的图形界面使用。你可以选择一个目录，将LLVM解压到其中（推荐使用默认选项）。</p></li><li><p>查看<a href="http://llvm.org/docs/CMake.html" target="_blank" rel="noopener">LLVM CMake 导航</a>获取更多信息关于如何去配置LLVM编译</p></li><li><p>CMake为所有的构建类型产生项目文件。要选择一个特殊的构建类型，你可以使用VS IDE的配置管理器，或者当使用MSBuild时，你也可以使用/property:Configuration 命令行选项。</p></li></ul><p>6、启动 Visual Studio</p><ul><li>在你所创建的项目文件中，你会发现llvm.sln，双击它打开Visual Studio</li></ul><p>7、编译LLVM组件</p><ul><li><p>这个项目可能会仍然可能会被单独构建，但构建他们时不要仅仅选择让他们全部批量构建，而是选择并且构建需要全部构建的项目去全部构建。</p></li><li><p>Fibonacci项目是一个使用JIT的例子程序。修改项目的调试属性去提供一个数字化的命令行参数或者在命令行里运行它。这个程序将会打印绑定的fibonacci值</p></li></ul><p>8、在 Visual Studio 里测试LLVM</p><ul><li><p>如果%PATH%不包含CnuWin32，你能够在CMake上指定 LLVM_LIT_TOOLS_DIR 作为给GnuWin32的路径</p></li><li><p>你能够仅仅在构建项目“check”时运行LLVM 测试。测试结果将会展示在VS的输出窗口里。</p></li></ul><p>9、在命令行里测试LLVM</p><ul><li>LLVM测试能够运行通过改变目录至LLVM源码目录并运行如下命令：</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">C:\..\llvm&gt; python ..\build\bin\llvm-lit --param build_config=Win32 --param build_mode=Debug --param llvm_site_config=../build/test/lit.site.cfg test</span><br></pre></td></tr></table></figure><p>上述例子假定Python已经在你的Path变量里了，你已经构建了一个LLVM的Win32调试版本通过一个行构建的标准输出。你不会看到任何不可预见的失败提示，但是会看到许多不支持测试和可预见的失败提示。<br>一个特殊的测试或测试目录能够被运行如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">C:\..\llvm&gt; python ..\build\bin\llvm-lit --param build_config=Win32 --param build_mode=Debug --param llvm_site_config=../build/test/lit.site.cfg test/path/to/test</span><br></pre></td></tr></table></figure></p><p>##一个使用LLVM工具链的示例##</p><p>1、首先，创建一个简单的C文件，命名为’hello.c’</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"hello world\n"</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>2、接着，将这个C文件编译为LLVM字节码文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">C:\..&gt; clang -c hello.c -emit-llvm -o hello.bc</span><br></pre></td></tr></table></figure><p>这样将会创建一个结果文件hello.bc。你能够直接使用lli工具执行这个文件，llc工具编译它成为本地汇编代码，优化它通过opt工具，等等。<br>另外，你能够直接输出一个可执行文件通过clang：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">C:\..&gt; clang hello.c -o hello.exe</span><br></pre></td></tr></table></figure></p><p>3、使用实时编译器运行程序：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">C:\..&gt; lli hello.bc</span><br></pre></td></tr></table></figure></p><p>4、使用llvm-dis实用工具去查看LLVM汇编代码：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">C:\..&gt; llvm-dis &lt; hello.bc | more</span><br></pre></td></tr></table></figure></p><p>5、使用LLC代码生成器编译程序成object code<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">C:\..&gt; llc -filetype=obj hello.bc</span><br></pre></td></tr></table></figure></p><p>6、使用Microsoft链接链接成二进制：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">C:\..&gt; link hello.obj -defaultlib:libcmt</span><br></pre></td></tr></table></figure></p><p>7、执行可执行程序：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">C:\..&gt; hello.exe</span><br></pre></td></tr></table></figure></p><p>##链接##</p><ul><li><a href="http://llvm.org/" target="_blank" rel="noopener">LLVM homepage</a></li><li><a href="http://llvm.org/doxygen/" target="_blank" rel="noopener">LLVM doxygen tree</a></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;这是一篇关于如何在Windows平台下使用LLVM的文章，由tajpure转述自 &lt;a href=&quot;http://llvm.org/docs/GettingStartedVS.html#id2&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;LLVM官网&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;##概述##&lt;br&gt;LLVM，命名最早取自底层虚拟机器（Low Level Virtual Machine）的缩写。由很多项目组成，它是一个编译器的基础框架，提供完整的编译系统中间层。使用Visual Studio而不是使用mingw或cygwin来编译LLVM。这是因为vc能编译出更原生的程序，只依赖于VC的dll。&lt;br&gt;
    
    </summary>
    
    
      <category term="技术" scheme="https://tajpure.com/tags/%E6%8A%80%E6%9C%AF/"/>
    
  </entry>
  
  <entry>
    <title>八月二十五日诸事记</title>
    <link href="https://tajpure.com/2014/08/25/%E5%85%AB%E6%9C%88%E4%BA%8C%E5%8D%81%E4%BA%94%E6%97%A5%E8%AF%B8%E4%BA%8B%E8%AE%B0/"/>
    <id>https://tajpure.com/2014/08/25/八月二十五日诸事记/</id>
    <published>2014-08-25T12:17:00.000Z</published>
    <updated>2019-07-05T01:55:22.000Z</updated>
    
    <content type="html"><![CDATA[<p>第一件事：<br>由于正在参与开发编译器。今天了解了一下LLVM，官方给出的文档比较清晰简单，用来实现定制编译器确实是一个很好的选择。编译号称计算机三大显学之一, 我一直对编译原理很感兴趣,这次可以藉这个机会提高自己对于程序语言的认识。<a id="more"></a></p><p>第二件事：<br>我竟然将C盘删掉了，虽然windows等几个目录还部分得以保留，但几乎已经是不能使用了。使用文件恢复软件后，大部分恢复的文件没有目录，全部挤在C的根目录下,相当于没用。虽然现在windows用的不多，但也有时候需要使用，只能硬著头皮去重装系统了。以后删除文件切忌使用delete键。</p><p>第三件事：<br>博客前端界面决定先使用别人的界面（light），自己的博客前端暂时搁置。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;第一件事：&lt;br&gt;由于正在参与开发编译器。今天了解了一下LLVM，官方给出的文档比较清晰简单，用来实现定制编译器确实是一个很好的选择。编译号称计算机三大显学之一, 我一直对编译原理很感兴趣,这次可以藉这个机会提高自己对于程序语言的认识。
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>神话</title>
    <link href="https://tajpure.com/2014/08/17/%E7%A5%9E%E8%AF%9D/"/>
    <id>https://tajpure.com/2014/08/17/神话/</id>
    <published>2014-08-17T09:54:51.000Z</published>
    <updated>2019-07-05T01:55:22.000Z</updated>
    
    <content type="html"><![CDATA[<p>  昏昏沉沉的午觉后正好看见这部电影，成龙大哥05的片子了。小时候特别喜欢他拍的电影，又有功夫又非常搞笑，传达的还是非常正面积极的价值观。常常幻想着像他一样，学一身功夫去英雄救美。这部电影讲的是一个名叫Jake(前生是蒙毅)的人的前世今生。整部电影的情节显得十分的仓促，这可能是因为打戏的份量过多，而最后没有太多时间去好好诠释蒙毅(Jake)与玉漱之间感情的细微变化。对我而言，这并没有太影响观影质量，我觉得这部片子的亮点在于成龙大哥的幽默打风与歌曲(神话)，当然还有金大姐和那位印度妹子。<br><a id="more"></a><br>  电影中的蒙毅是一位非常忠心的将军，我甚至到最后也不知道他到底是为了秦皇而死还是为了玉漱而死。在玉漱为他跳那段舞的时候，我想我要是蒙毅就果断带着玉漱远走天涯了，反正别人也不知道我们是死是活。蒙毅与玉漱形成了鲜明的对比，一个只知效忠秦皇,似乎是英雄却是愚忠，是君权天授的世界里最受宣扬的人；另一个敢爱敢恨，为了蒙毅不惜放弃自己的“大义”，最后为蒙毅而生也为蒙毅而死。</p><p>  Jake，与其说是主角倒不如说是蒙毅与玉漱这场爱情的见证者。Jake不是蒙毅，所以玉漱含泪飞回陵宫，继续等待。</p><p>  再附上几张剧照：</p><p>  <img src="../../../../image/fairy02.jpg" alt="玉漱"></p><p>  <img src="../../../../image/fairy01.jpg" alt="蒙毅与玉漱"></p><p>  <img src="../../../../image/fairy03.jpg" alt="相见"></p><p>  <img src="../../../../image/fairy04.jpg" alt="再贴一张"></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;  昏昏沉沉的午觉后正好看见这部电影，成龙大哥05的片子了。小时候特别喜欢他拍的电影，又有功夫又非常搞笑，传达的还是非常正面积极的价值观。常常幻想着像他一样，学一身功夫去英雄救美。这部电影讲的是一个名叫Jake(前生是蒙毅)的人的前世今生。整部电影的情节显得十分的仓促，这可能是因为打戏的份量过多，而最后没有太多时间去好好诠释蒙毅(Jake)与玉漱之间感情的细微变化。对我而言，这并没有太影响观影质量，我觉得这部片子的亮点在于成龙大哥的幽默打风与歌曲(神话)，当然还有金大姐和那位印度妹子。&lt;br&gt;
    
    </summary>
    
    
      <category term="电影" scheme="https://tajpure.com/tags/%E7%94%B5%E5%BD%B1/"/>
    
  </entry>
  
  <entry>
    <title>闷骚</title>
    <link href="https://tajpure.com/2014/08/09/%E9%97%B7%E9%AA%9A/"/>
    <id>https://tajpure.com/2014/08/09/闷骚/</id>
    <published>2014-08-09T12:53:09.000Z</published>
    <updated>2019-07-05T01:55:22.000Z</updated>
    
    <content type="html"><![CDATA[<p>不知从什么时候开始，有人说我“闷骚”。鉴于这个词出现的频率很高，并且我并不太了解这个词真正是什么意思，所以我决定研究一下这个词的真正含义。这个词出现的情景一般有以下两种：<br>    1、直言不讳型<br>        “我从你平时的表现可以看出你是一个闷骚的人啊。”<br>    2、侧面评论型<br>        “你不要看他现在这样，其实他是一个很闷骚的人。”<br><a id="more"></a><br>不太能够理解这个词所表示的确切含义。我是一个又闷又骚的人？（人格分裂，贬义）我是一个外表看起来很沉闷但是内心很骚的人？（虚伪，贬义）<br>由于不确切具体的含义，现在身边又没有一个好友可以询问他当时用这个词想要表示的意思，所以就先查了一下wiki（万事不懂问wiki：）。结果如下：</p><p>闷骚 含义：<br>1、喻人外表克制、中规中矩，内心却充满激情、渴望;<br>    2、指外表冷静、沉默，而实际富有思想内涵的人。即表面上矜持得不行，骨子里热情似火的人。闷骚是一种迂回的表演，因含蓄而上升了一个境界，是一种假正经和低调的放肆。它蛰伏在人体内，假寐、积蓄、含而不露、欲说还休，时机一旦成熟，就立即苏醒，继而惊世骇俗。</p><p>看到这里，我不禁感叹我的那些朋友们是多么地“有见地”，而我是如此地“白痴”。我以前一直以为这个词是富含贬义意味的，是我的无良朋友对我人格的一种藐视，今天我才发现大错特错。以后有机会请这些朋友吃顿饭。：P</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;不知从什么时候开始，有人说我“闷骚”。鉴于这个词出现的频率很高，并且我并不太了解这个词真正是什么意思，所以我决定研究一下这个词的真正含义。这个词出现的情景一般有以下两种：&lt;br&gt;    1、直言不讳型&lt;br&gt;        “我从你平时的表现可以看出你是一个闷骚的人啊。”&lt;br&gt;    2、侧面评论型&lt;br&gt;        “你不要看他现在这样，其实他是一个很闷骚的人。”&lt;br&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>博客界面更新</title>
    <link href="https://tajpure.com/2014/07/26/%E5%8D%9A%E5%AE%A2%E7%95%8C%E9%9D%A2%E6%9B%B4%E6%96%B0/"/>
    <id>https://tajpure.com/2014/07/26/博客界面更新/</id>
    <published>2014-07-25T16:04:25.000Z</published>
    <updated>2019-07-05T01:55:22.000Z</updated>
    
    <content type="html"><![CDATA[<p>今天晚上抽了点时间更新了一下博客的界面。简单的白底黑字界面感觉整体上还是十分清爽的，是我想要的风格。看了一下时间，十二点刚过，突然发现今天忘记更新一下longest streak了，呃，好象是昨天了- -||。虽然也没什么要紧，但是好不容易坚持这么多天的东西就这么断掉了，真是有点可惜。下次，再接再厉吧。有点走题了，这篇文应该是对该博客未来设计做一个简单的规划的。<br><a id="more"></a><br>首先，至今为止已经完成了整个博客大体上的搭建。由于发现静态博客的便捷，于是果断放弃自己设计动态博客后端，而采用简单强大的hexo。接下来的就是做博客的界面了，因为比较崇尚简洁，因此把自己认为不需要的东西全部清除。</p><p>大概的计划如下：</p><p>1，logo 标志必不可少；<br>2，最新 最新发布的文章；<br>3，列表 按某种排序规则（时间或其它）建立的一个索引列表；<br>4，关于 主人介绍也必不可少；<br>5，标签（待定）目前感觉没什么用，反正就我一个人看 -_-；<br>6，rss(待定）理由同上，不过支持rss还是一件很有节操的事情；<br>7，评论（待定） 理由也同上，真是对自己太没信心了…<br>8，多语言（待定） 作为时刻与国际接轨的cser,最起码应该支持英文；<br>9，文章展示 这个最重要，所以放在最后。博客不就是展示文章的吗？效果要满足无形胜有形，内容最重要嘛！读者的注意力能全部集中于内容本身才是我要的效果！</p><p>大致规划如上所示，首先将前四个做好（因为比较简单），再根据当前需求选择实现待定部分；“文章展示”与其它八个并行进行，实时调整，毕竟“无形胜有形”是需要很长时间领悟的。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;今天晚上抽了点时间更新了一下博客的界面。简单的白底黑字界面感觉整体上还是十分清爽的，是我想要的风格。看了一下时间，十二点刚过，突然发现今天忘记更新一下longest streak了，呃，好象是昨天了- -||。虽然也没什么要紧，但是好不容易坚持这么多天的东西就这么断掉了，真是有点可惜。下次，再接再厉吧。有点走题了，这篇文应该是对该博客未来设计做一个简单的规划的。&lt;br&gt;
    
    </summary>
    
    
      <category term="本博客" scheme="https://tajpure.com/tags/%E6%9C%AC%E5%8D%9A%E5%AE%A2/"/>
    
  </entry>
  
  <entry>
    <title>使用JavaParser进行java源码解析</title>
    <link href="https://tajpure.com/2014/02/11/%E4%BD%BF%E7%94%A8JavaParser%E8%BF%9B%E8%A1%8Cjava%E6%BA%90%E7%A0%81%E8%A7%A3%E6%9E%90/"/>
    <id>https://tajpure.com/2014/02/11/使用JavaParser进行java源码解析/</id>
    <published>2014-02-11T01:25:36.000Z</published>
    <updated>2019-07-05T01:55:22.000Z</updated>
    
    <content type="html"><![CDATA[<p>  JavaParser下载地址：<a href="http://code.google.com/p/javaparser/downloads/list" target="_blank" rel="noopener">http://code.google.com/p/javaparser/downloads/list</a></p><p>  刚开始接触的时候觉得和JDT里的Parser类不太一样。查了一下WiKi，发现它访问编译单元成员，需要调用相应子元素对应的Visitor类的visit（）方法。此方法可以通过复写来实现自己需要的功能。我需要的功能是将编译单元里的所有MethodDeclaration取出，因此利用传递句柄的方式，实现代码如下：<br><a id="more"></a></p><pre><code>public static List&lt;MethodDeclaration&gt; getMethodList(CompilationUnit cu) {     List&lt;MethodDeclaration&gt; methodList = new ArrayList&lt;MethodDeclaration&gt;();     new MethodGetterVisitor().visit(cu, methodList);     return methodList; } private static class MethodGetterVisitor extends VoidVisitorAdapter&lt;Object&gt; {     @SuppressWarnings(&quot;unchecked&quot;)     @Override     public void visit(MethodDeclaration n, Object arg) {         List&lt;MethodDeclaration&gt; methodList = new ArrayList&lt;MethodDeclaration&gt;();         methodList =  (List&lt;MethodDeclaration&gt;) arg;         methodList.add(n);     } }</code></pre><p>  官方还提供了不通过Visitor改变一个类成员方法的示例（相对Visitor更复杂）：</p><pre><code>public class MethodChanger {  public static void main(String[] args) throws Exception {     // creates an input stream for the file to be parsed     FileInputStream in = new FileInputStream(&quot;test.java&quot;);    CompilationUnit cu;     try {        // parse the file        cu = JavaParser.parse(in);     } finally {          in.close();     }    // change the methods names and parameters    changeMethods(cu);   // prints the changed compilation unit   System.out.println(cu.toString());}private static void changeMethods(CompilationUnit cu) {   List&lt;TypeDeclaration&gt; types = cu.getTypes();   for (TypeDeclaration type : types) {       List&lt;BodyDeclaration&gt; members = type.getMembers();       for (BodyDeclaration member : members) {           if (member instanceof MethodDeclaration) {               MethodDeclaration method = (MethodDeclaration) member;               changeMethod(method);           }       }   }}private static void changeMethod(MethodDeclaration n) {   // change the name of the method to upper case   n.setName(n.getName().toUpperCase());  // create the new parameter  Parameter newArg = ASTHelper.createParameter(ASTHelper.INT_TYPE, &quot;value&quot;);  // add the parameter to the method  ASTHelper.addParameter(n, newArg); }}</code></pre><p> 最后附上WiKi里给出的编译单元创建示例：</p><pre><code>public class ClassCreator { public static void main(String[] args) throws Exception {   // creates the compilation unit   CompilationUnit cu = createCU();   // prints the created compilation unit   System.out.println(cu.toString());}/*** creates the compilation unit*/private static CompilationUnit createCU() {   CompilationUnit cu = new CompilationUnit();   // set the package   cu.setPakage(new PackageDeclaration(ASTHelper.createNameExpr(&quot;java.parser.test&quot;)));   // create the type declaration    ClassOrInterfaceDeclaration type = new ClassOrInterfaceDeclaration(ModifierSet.PUBLIC, false, &quot;GeneratedClass&quot;);   ASTHelper.addTypeDeclaration(cu, type);   // create a method   MethodDeclaration method = new MethodDeclaration(ModifierSet.PUBLIC, ASTHelper.VOID_TYPE, &quot;main&quot;);   method.setModifiers(ModifierSet.addModifier(method.getModifiers(), ModifierSet.STATIC));   ASTHelper.addMember(type, method);   // add a parameter to the method   Parameter param = ASTHelper.createParameter(ASTHelper.createReferenceType(&quot;String&quot;, 0), &quot;args&quot;);   param.setVarArgs(true);   ASTHelper.addParameter(method, param);   // add a body to the method   BlockStmt block = new BlockStmt();   method.setBody(block);   // add a statement do the method body   NameExpr clazz = new NameExpr(&quot;System&quot;);   FieldAccessExpr field = new FieldAccessExpr(clazz, &quot;out&quot;);   MethodCallExpr call = new MethodCallExpr(field, &quot;println&quot;);   ASTHelper.addArgument(call, new StringLiteralExpr(&quot;Hello World!&quot;));   ASTHelper.addStmt(block, call);   return cu; }}</code></pre>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;  JavaParser下载地址：&lt;a href=&quot;http://code.google.com/p/javaparser/downloads/list&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;http://code.google.com/p/javaparser/downloads/list&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;  刚开始接触的时候觉得和JDT里的Parser类不太一样。查了一下WiKi，发现它访问编译单元成员，需要调用相应子元素对应的Visitor类的visit（）方法。此方法可以通过复写来实现自己需要的功能。我需要的功能是将编译单元里的所有MethodDeclaration取出，因此利用传递句柄的方式，实现代码如下：&lt;br&gt;
    
    </summary>
    
    
      <category term="技术" scheme="https://tajpure.com/tags/%E6%8A%80%E6%9C%AF/"/>
    
  </entry>
  
  <entry>
    <title>孤的单与独</title>
    <link href="https://tajpure.com/2013/12/22/%E5%AD%A4%E7%9A%84%E5%8D%95%E4%B8%8E%E7%8B%AC/"/>
    <id>https://tajpure.com/2013/12/22/孤的单与独/</id>
    <published>2013-12-22T12:23:59.000Z</published>
    <updated>2019-07-05T01:55:22.000Z</updated>
    
    <content type="html"><![CDATA[<p>孤单。<br>很久以来，几乎每每遇见这个词都会有所触动，似乎从很小的开始我就开始体会这个词的含义了。应该是零一年，那年八岁吧，随着父母从稍显破落却又不乏喧嚣的小镇上搬到湖区。刚刚搬过去的时候非常兴奋，带着狗在堤边不知倦怠的跑来跑去。之后却真真实实地发现我的生活已经彻底变了，除却我们家一户，周围了无人烟，父母白天在水田里劳作，几乎没有人陪我。不过，那时候，我有一条叫做精灵的狗，还有一整个自己的世界。</p><p>及至后来，因为上学不便，我搬回镇上，一个人住着。好像也就十来岁吧，晚上一个人的时候常常怕关灯，每次关灯一定留在最后，关完灯马上便跑着钻进被窝，连头也不敢露出去。有时候爸妈会过来看一下我，每次他们回去后我便觉得很难受，明明别人爸妈都在身边，可我却总是得自己生活。</p><p>孤独。<br>高中的时候看过《百年孤独》，看着里面荒诞不经的情节，迷茫而无知的人物，我从中有了共鸣，我想这算得上一部孤独的合集吧，一个人的孤独、一群人的孤独、成的孤独、败的孤独。人与人之间何必假装着相互了解，都是带着个面具活着的，大概真的只有自己才能了解自己吧，哈哈。</p><p>如果说孤单是一种没得选择的一个人，那孤独就是有得选择的一个人了吧？好像也不是这样，像我这种小时候一个人呆久了的，长大了，人太多居然很不习惯。这是有得选的吗？有时候还真想有一个像梅尔基亚德斯那样的人能看出我的本质，无论这本质是好是坏，我都会把他像神一样对待。</p><p>想坦诚地面对每一个人，让别人了解真正的自己。可不戴面具，伤害的却也只有自己。这么些事后却也懂得了孤独是自己的，谁也抢不走，哈哈。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;孤单。&lt;br&gt;很久以来，几乎每每遇见这个词都会有所触动，似乎从很小的开始我就开始体会这个词的含义了。应该是零一年，那年八岁吧，随着父母从稍显破落却又不乏喧嚣的小镇上搬到湖区。刚刚搬过去的时候非常兴奋，带着狗在堤边不知倦怠的跑来跑去。之后却真真实实地发现我的生活已经彻底变了，
      
    
    </summary>
    
    
      <category term="感悟" scheme="https://tajpure.com/tags/%E6%84%9F%E6%82%9F/"/>
    
  </entry>
  
  <entry>
    <title>不断自我麻醉的过程中,已经被落下很大一段距离了</title>
    <link href="https://tajpure.com/2013/10/20/%E4%B8%8D%E6%96%AD%E8%87%AA%E6%88%91%E9%BA%BB%E9%86%89%E7%9A%84%E8%BF%87%E7%A8%8B%E4%B8%AD,%E5%B7%B2%E7%BB%8F%E8%A2%AB%E8%90%BD%E4%B8%8B%E5%BE%88%E5%A4%A7%E4%B8%80%E6%AE%B5%E8%B7%9D%E7%A6%BB%E4%BA%86/"/>
    <id>https://tajpure.com/2013/10/20/不断自我麻醉的过程中,已经被落下很大一段距离了/</id>
    <published>2013-10-20T13:27:53.000Z</published>
    <updated>2019-07-05T01:55:22.000Z</updated>
    
    <content type="html"><![CDATA[<p>犹记得刚上大学时的情景，目标明确，满怀希望。对于一件事情有着确切的决断，不会犹犹豫豫，更不会患得患失。高考后就给自己设定过目标，看过许多大学生活指导书，也给自己做过规划。现在看来，这几年意志消沉了，丢失了当年得以依靠的最重要的东西——决心与坚持。</p><p>人在安逸的环境下容易丧失斗志，也容易被繁杂的琐事打的尊严尽失。浸淫在这样的生活环境下，会慢慢变得毫无冲动，灵魂会干枯，直至死亡。生命的意义何在？这是最废物的人才常常会思考的问题！如果连自己生命是为了什么都不知道，就根本没有活在这个世界的意义。只有正在努力实现自己生命意义的人才是强者，才能活的有尊严。</p><p>遇事退缩不前，总是自我麻醉，就像我现在这样。我什么时候也变成了自己讨厌的人。没有理想的人就是奴隶，他们被世界驱使着像狗一般地生活。只有有理想才能改变世界，才能使世界按自己的想法去运转，才能有存在的价值。没有斗志，就像圈中的猪猡，只能任人宰割。</p><p>我凭什么去改变世界，凭我每天八点起床前玩半小时手机？凭我在自习室漫无目的地浏览着网页？还是凭我那颗自以为是还沾沾自喜的心？现在的我确实很傻比，我自己也察觉到了。没能做好任何一件事情，却还是一味的沉溺在自己编造的谎言之中。确实是被有些人骗了，但是自己确实也没能做好决断。究竟该怎么活是我自己的事，与别人无关！</p><p>常常说自己多么多么牛逼，早已看破滚滚红尘。在资本主义横行的现在，一切都会被万恶的资本所支配，为了逃脱这样的束缚，我不得不放弃我对于人生的追求，不然我也会被这丑恶的社会所同化。说的再怎么铿锵有力，也没有底气，不过是逃避罢了，何必呢？</p><p>忘记了自己纯粹的追求，关于爱与理想。在茫茫世界之中，看不见你，也找不到我自己。宛如一具浮尸，没有意识，更不知道自己将要漂向何方，只是不断散发着恶臭，让这个腐烂的世界更加腐烂。</p><p>能清醒吗？能清醒吗？能清楚地认识到自己的处境吗？能放眼看看这整个世界已经变成什么样子了吗？能问心无愧地对以前的自己说：“我对得起你！”吗？不然的话，就只能是一头猪猡，无奈地抱怨，然后吃，然后睡，然后去死！</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;犹记得刚上大学时的情景，目标明确，满怀希望。对于一件事情有着确切的决断，不会犹犹豫豫，更不会患得患失。高考后就给自己设定过目标，看过许多大学生活指导书，也给自己做过规划。现在看来，这几年意志消沉了，丢失了当年得以依靠的最重要的东西——决心与坚持。&lt;/p&gt;
&lt;p&gt;人在安逸的环
      
    
    </summary>
    
    
      <category term="感悟" scheme="https://tajpure.com/tags/%E6%84%9F%E6%82%9F/"/>
    
  </entry>
  
  <entry>
    <title>项脊轩志</title>
    <link href="https://tajpure.com/2013/10/07/%E9%A1%B9%E8%84%8A%E8%BD%A9%E5%BF%97/"/>
    <id>https://tajpure.com/2013/10/07/项脊轩志/</id>
    <published>2013-10-07T14:11:22.000Z</published>
    <updated>2019-07-05T01:55:22.000Z</updated>
    
    <content type="html"><![CDATA[<p>项脊轩，旧南阁子也。室仅方丈，可容一人居。百年老屋，尘泥渗漉，雨泽下注；每移案，顾视，无可置者。又北向，不能得日，日过午已昏。余稍为修葺，使不上漏。前辟四窗，垣墙周庭，以当南日，日影反照，室始洞然。又杂植兰桂竹木于庭，旧时栏楯，亦遂增胜。借书满架，偃仰啸歌，冥然兀坐，万籁有声；而庭堦寂寂，小鸟时来啄食，人至不去。三五之夜，明月半墙，桂影斑驳，风移影动，珊珊可爱。</p><p>然余居于此，多可喜，亦多可悲。先是庭中通南北为一。迨诸父异爨，内外多置小门，墙往往而是。东犬西吠，客逾庖而宴，鸡栖于厅。庭中始为篱，已为墙，凡再变矣。家有老妪， 尝居于此。妪，先大母婢也，乳二世，先妣抚之甚厚。室西连于中闺，先妣尝一至。妪每谓余曰：“某所，而母立于兹。”妪又曰：“汝姊在吾怀，呱呱而泣；娘以指叩门扉曰：‘儿寒乎？欲食乎？’吾从板外相为应答。”语未毕， 余泣，妪亦泣。余自束发，读书轩中，一日，大母过余曰：“吾儿，久不见若影，何竟日默默在此，大类女郎也？”比去，以手阖门，自语曰：“吾家读书久不效，儿之成，则可待乎！”顷之，持一象笏至，曰：“此吾祖太常公宣德间执此以朝，他日汝当用之！”瞻顾遗迹，如在昨日，令人长号不自禁。</p><p>轩东，故尝为厨，人往，从轩前过。余扃牖而居，久之，能以足音辨人。轩凡四遭火，得不焚，殆有神护者。</p><p>项脊生曰：“蜀清守丹穴，利甲天下，其后秦皇帝筑女怀清台；刘玄德与曹操争天下，诸葛孔明起陇中。方二人之昧昧于一隅也，世何足以知之，余区区处败屋中，方扬眉、瞬目，谓有奇景。人知之者，其谓与坎井之蛙何异？”</p><p>余既为此志，后五年，吾妻来归，时至轩中，从余问古事，或凭几学书。 吾妻归宁，述诸小妹语曰：“闻姊家有阁子，且何谓阁子也？”其后六年，吾妻死，室坏不修。其后二年，余久卧病无聊，乃使人复葺南阁子，其制稍异于前。然自后余多在外，不常居。</p><p>庭有枇杷树，吾妻死之年所手植也，今已亭亭如盖矣。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;项脊轩，旧南阁子也。室仅方丈，可容一人居。百年老屋，尘泥渗漉，雨泽下注；每移案，顾视，无可置者。又北向，不能得日，日过午已昏。余稍为修葺，使不上漏。前辟四窗，垣墙周庭，以当南日，日影反照，室始洞然。又杂植兰桂竹木于庭，旧时栏楯，亦遂增胜。借书满架，偃仰啸歌，冥然兀坐，万籁有
      
    
    </summary>
    
    
      <category term="摘录" scheme="https://tajpure.com/tags/%E6%91%98%E5%BD%95/"/>
    
  </entry>
  
  <entry>
    <title>从北方驶向南方的火车上</title>
    <link href="https://tajpure.com/2013/10/02/%E4%BB%8E%E5%8C%97%E6%96%B9%E9%A9%B6%E5%90%91%E5%8D%97%E6%96%B9%E7%9A%84%E7%81%AB%E8%BD%A6%E4%B8%8A/"/>
    <id>https://tajpure.com/2013/10/02/从北方驶向南方的火车上/</id>
    <published>2013-10-01T18:06:37.000Z</published>
    <updated>2019-07-05T01:55:22.000Z</updated>
    
    <content type="html"><![CDATA[<p>拖着疲惫不堪的身躯，买了一张车票，用尽最后的力气钻进车里。我座位靠着窗户，看看窗外，已经是晚上了，外面很黑，火车这个强大的机器，用着疯狂的节奏向前狂奔着。待在一个强而有力的机器上总是让人感到心安，就像我以前喜欢的那个女人，最终还是没有选择我，因为我除了那可怜的信仰什么都没有。</p><p>很久以前，我一直觉得我是一个强大的男人，我愿意给她承诺，愿意为她拼搏。可是在我拼命奋斗的时候，她选择了另外一个物质上已经很是强大的男人。我一直不屑于基于物质的选择，我一直认为选择是人类最为崇高的权利，而基于物质的选择常常会掺杂过于卑劣的欲望。可是当我最为尊敬最为爱慕的女人毫不犹豫地选择那个男人时，我开始怀疑自己，我之前愿意为她拼搏是因为我觉得我对她的爱情是无价的，奋力拼搏只是为了证明我对她的爱，而她用她的选择证明我的失败。</p><p>我剩下的仅仅是无奈，后来经历过很多的事，变化的也很多，最后就连自己都认不出自己。我发现自己对身患绝症亲人的诉苦没有任何感觉，就像他在吐槽生活中最最无聊的琐事一样，我只能麻木地“嗯”来表示回应。我现在没有了生活，仅仅是麻木不仁的生存着，在我眼里所有的东西都变成了机器，或强或弱，或大或小，都用着自己的节奏运行着，不能运行就被扔掉，这就是这个世界的规则。我已经深谙这个规则，所以我变得很强大，所以我有了依附于我的女人，但我不爱她，因为我不再爱这个世界。交易嘛，谁不会。</p><p>谁还会想到我这个善于攀附权贵，出手卑劣下作的人曾经竟然还在他学校里那条最破旧不堪的跑道上狂呼过让世界更公平正义的理想，可是那理想早已随着屎尿一起被冲进了下水道。</p><p>我丢掉了理想、人格和道德，换来了金钱、权利和地位。可是越来越觉得空虚，这个世界无聊的游戏我已经受够了，我选择了安静地离开，不要像出生时那样吵闹。我叫来我的女人，告诉她我马上就会滚蛋了，遗产全给她，之后她爱找谁找谁。她就这样睁圆了眼睛盯着我，真他妈是个笨女人，她已经解放了，她此刻只需做的是高高兴兴等我死了拿了钱找其他男人去，盯着我看干嘛？她竟然说她爱我，在我临死之前竟然说这样的话，我笑了。我对她说，如果你真的爱我，把这瓶吗啡吃了吧，和我一起死，可以吗？她突然惊慌起来，急促的跑开了。我觉得这一瞬间，连死都没有意义了，只能像一个没有了灵魂的行尸在这个世界游荡。</p><p>火车呼啸着前行，下一站究竟是哪？</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;拖着疲惫不堪的身躯，买了一张车票，用尽最后的力气钻进车里。我座位靠着窗户，看看窗外，已经是晚上了，外面很黑，火车这个强大的机器，用着疯狂的节奏向前狂奔着。待在一个强而有力的机器上总是让人感到心安，就像我以前喜欢的那个女人，最终还是没有选择我，因为我除了那可怜的信仰什么都没有
      
    
    </summary>
    
    
      <category term="小说" scheme="https://tajpure.com/tags/%E5%B0%8F%E8%AF%B4/"/>
    
  </entry>
  
  <entry>
    <title>关于生活中的一些感慨(其实仅仅只是吐槽...)</title>
    <link href="https://tajpure.com/2013/10/02/%E5%85%B3%E4%BA%8E%E7%94%9F%E6%B4%BB%E4%B8%AD%E7%9A%84%E4%B8%80%E4%BA%9B%E6%84%9F%E6%85%A8(%E5%85%B6%E5%AE%9E%E4%BB%85%E4%BB%85%E5%8F%AA%E6%98%AF%E5%90%90%E6%A7%BD)/"/>
    <id>https://tajpure.com/2013/10/02/关于生活中的一些感慨(其实仅仅只是吐槽)/</id>
    <published>2013-10-01T17:40:24.000Z</published>
    <updated>2019-07-05T01:55:22.000Z</updated>
    
    <content type="html"><![CDATA[<p>此刻面对着的是北京城将近凌晨时的夜景，四环外的灯火寥若星辰，仿佛又轮回到小时，在自家院子里躺在凉床上看星空的时候。而这期间发生的一切仿佛都是一个梦，所有的烦恼都将随着梦醒而消散。那个时候还很单纯，没有太多的欲望和痛苦，牵着精灵走在乡间小道上就觉得很快乐。这条叫精灵的狗伴随了我大半的童年，我在田间跑时有它，我在河边钓鱼有它，我坐在树下无聊地发着呆也有它。没有邻居，没有同龄的孩子，剩下的只有爸妈，这条狗和一片广阔的天地，除了令人懊恼的学习成绩以外其他已经是很幸福了。</p><p>其实所有沉溺于回忆的人大多都怀着对现实的不满，以及对未来的无望。迷失在盲目追求某些东西的时候，常常会觉得十分的痛苦，有时甚至发现自己很变态，似乎与周围格格不入，但还要假装很淡定的样子，不想让人知道我的懦弱。然后无耻地炫耀着在某些方面的优势，藉以安抚自己那贫瘠而又空虚的心。</p><p>究竟应该怎样去活，才能既满足主流价值观的评定又要符合自己对于人生的标准？海子同学曾经写过一首叫“面朝大海，春暖花开”的诗，大概可以看出他对于他自己人生的标准，最后他卧轨自杀，是否是因为他当时的活法有违主流的价值观？我不知道。但有一句话似乎告诉了我一个真正的道理，叫“你若认真你便输了，呵呵”。在三观不断被扭曲甚至全部崩塌的今天，形似犬儒主义的活法当真是一种可以采取的良策。可犬儒常常又让人想成是废狗一只，哈哈，看来还是不能摆脱主流价值观念的影响，没办法，从小就是这么被教出来的。只能怀着一种游戏人生的态度，像个好人一样过好每一天，这辈子先当个好一点的人吧。</p><p>看了下窗外，没有星星，只有星星灯火。我还是很喜欢星空的，你永远也不知道这些星星到底长什么样，是长的还是方的，是五角形的还是圆的？不知道的，总是带着一份美好。就像小时候啥也不知道，还傻兮兮地向往着长大。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;此刻面对着的是北京城将近凌晨时的夜景，四环外的灯火寥若星辰，仿佛又轮回到小时，在自家院子里躺在凉床上看星空的时候。而这期间发生的一切仿佛都是一个梦，所有的烦恼都将随着梦醒而消散。那个时候还很单纯，没有太多的欲望和痛苦，牵着精灵走在乡间小道上就觉得很快乐。这条叫精灵的狗伴随了
      
    
    </summary>
    
    
      <category term="感悟" scheme="https://tajpure.com/tags/%E6%84%9F%E6%82%9F/"/>
    
  </entry>
  
  <entry>
    <title>2013-6-6</title>
    <link href="https://tajpure.com/2013/06/06/2013-6-6/"/>
    <id>https://tajpure.com/2013/06/06/2013-6-6/</id>
    <published>2013-06-06T04:43:40.000Z</published>
    <updated>2019-07-05T01:55:22.000Z</updated>
    
    <content type="html"><![CDATA[<p>窗外淅淅淋淋地下着雨，很像家那边的天气，突然之间很想回家，很疲惫，想回家安安稳稳地睡一觉。不想想那么多的事情，人和人之间的事情想得太多的话就会愈发的迷茫，有些事情真的是想不清楚的。</p><p>多想世界简简单单，没有那么多纷争，没有那么多欲望。人们都是微笑着的，每天都是快乐的，我们并没有沉沦在欲望之中，每天还有很简单的乐趣，到处都是笑脸。一个人这一辈是多么短暂，好羡慕那些能够自由自在做自己的人。</p><p>随性很难，一个人不可能与一个世界抗争，甚至连表达一下不愿的情绪也不能，在我们发现我们已经被束缚在其中时，我们就已经不能回头，只能按照他设计好的步骤一步一步地走下去。最近很无奈，对于自己，对于这个世界。自己已经变得很懦弱了，害怕去赌，害怕会输。无法改变，不由得已经泪流满面。一直想让自己勇敢起来，也一直以为自己在遇见真正喜欢的人的时候会不顾一切地冲上去。</p><p>可是，为什么会变成这样，自己也不懂。自己性格太受外界约束了，不敢将自己真实的心声表露。唉。。。。。。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;窗外淅淅淋淋地下着雨，很像家那边的天气，突然之间很想回家，很疲惫，想回家安安稳稳地睡一觉。不想想那么多的事情，人和人之间的事情想得太多的话就会愈发的迷茫，有些事情真的是想不清楚的。&lt;/p&gt;
&lt;p&gt;多想世界简简单单，没有那么多纷争，没有那么多欲望。人们都是微笑着的，每天都是快
      
    
    </summary>
    
    
      <category term="感悟" scheme="https://tajpure.com/tags/%E6%84%9F%E6%82%9F/"/>
    
  </entry>
  
  <entry>
    <title>13-5-31</title>
    <link href="https://tajpure.com/2013/05/31/13-5-31/"/>
    <id>https://tajpure.com/2013/05/31/13-5-31/</id>
    <published>2013-05-31T13:56:36.000Z</published>
    <updated>2019-07-05T01:55:22.000Z</updated>
    
    <content type="html"><![CDATA[<p>好像已经很久没有像现在这样想自己的未来，想自己以后的路了，希望现在还不算晚。越来越 察觉到一种慌乱的情绪，但这种情绪来得并不莫名，它来自于我对未来的恐惧，对自己前途的低估。真的是本性如此，太没有安全感，对于什么都不会过于依赖，因此也少了一些坚持，容易随波逐流。看看别人已经取得的成绩，再看看自己现今的窘迫，发现自己已经错过了太多东西。</p><p>每个人做事情都会有他们自己的做法，而我常常习惯于模仿别人对待生活的态度，现在终于发现了真正适合自己的那种生活方式。其他人样子的活着，以前或许是不懂想尝试一下，可陷进去后发现如此痛苦，想逃却已经逃不掉了。现在回想起高中的那段时期，觉得既鼓舞又恐惧。的确，那是一段完全沉浸在一件事中的激动回忆，可那样地活着真的适合现在的环境吗？不太敢去尝试，可现在又不得不去这样做。</p><p>这个世界总是有那么多的无奈，无奈中或是放手或是咬牙坚持，全在于我们自己。想想自己曾经的梦想还有亲人的期待，觉得放手实在不应该，只有咬牙坚持下去了。放掉一些自己无法把握的东西，拼尽全力去实现自己能够实现的愿望，才是现在生活的重点。既然不能无拘无束自由的飞翔，那么就得像蜗牛一样负重向上爬行。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;好像已经很久没有像现在这样想自己的未来，想自己以后的路了，希望现在还不算晚。越来越 察觉到一种慌乱的情绪，但这种情绪来得并不莫名，它来自于我对未来的恐惧，对自己前途的低估。真的是本性如此，太没有安全感，对于什么都不会过于依赖，因此也少了一些坚持，容易随波逐流。看看别人已经取
      
    
    </summary>
    
    
      <category term="未来" scheme="https://tajpure.com/tags/%E6%9C%AA%E6%9D%A5/"/>
    
  </entry>
  
  <entry>
    <title>人生如是纠缠</title>
    <link href="https://tajpure.com/2013/05/19/%E4%BA%BA%E7%94%9F%E5%A6%82%E6%98%AF%E7%BA%A0%E7%BC%A0/"/>
    <id>https://tajpure.com/2013/05/19/人生如是纠缠/</id>
    <published>2013-05-19T02:34:20.000Z</published>
    <updated>2019-07-05T01:55:22.000Z</updated>
    
    <content type="html"><![CDATA[<p>有时候觉得很痛苦，因为快乐难寻；</p><p>有时候觉得很快乐，却不知道原因；</p><p>有时候看不懂世界，有时候又看不懂自己；</p><p>有时候善恶不分，世间的事没那么多界线；</p><p>有时候颓废不前，人生其实看得多了也就这样；</p><p>活得越久越不懂为什么活着，</p><p>不断被强化的信仰时常会在瞬间分崩析离。</p><p>世界的嬗变与固执的坚守时常困扰着自己，</p><p>变化得太快，真的不清楚什么能够依赖，</p><p>然而一成不变的单调却又会麻木自己的神经。</p><p>只能无奈地相信某些事情，</p><p>例如轮回，变化之中的某些无法改变？</p><p>也只能无奈地否认某些事情，</p><p>比方人心。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;有时候觉得很痛苦，因为快乐难寻；&lt;/p&gt;
&lt;p&gt;有时候觉得很快乐，却不知道原因；&lt;/p&gt;
&lt;p&gt;有时候看不懂世界，有时候又看不懂自己；&lt;/p&gt;
&lt;p&gt;有时候善恶不分，世间的事没那么多界线；&lt;/p&gt;
&lt;p&gt;有时候颓废不前，人生其实看得多了也就这样；&lt;/p&gt;
&lt;p&gt;活得越久越不
      
    
    </summary>
    
    
      <category term="感悟" scheme="https://tajpure.com/tags/%E6%84%9F%E6%82%9F/"/>
    
  </entry>
  
  <entry>
    <title>猎人--蚂蚁篇</title>
    <link href="https://tajpure.com/2013/05/18/%E7%8C%8E%E4%BA%BA--%E8%9A%82%E8%9A%81%E7%AF%87/"/>
    <id>https://tajpure.com/2013/05/18/猎人--蚂蚁篇/</id>
    <published>2013-05-18T04:35:25.000Z</published>
    <updated>2019-07-05T01:55:22.000Z</updated>
    
    <content type="html"><![CDATA[<p>让我们举杯畅饮，<br>为了纪念人类这种生物。<br>善人恶人，无论世间变化，人类依旧重复。<br>在比腐烂要长久，比学习要短暂的时之螺旋上，所以才会如此渴望，才会如此好生是非吧？<br>生命为何？分明只是些拥有阳光、大地、诗歌便会完整的事物。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;让我们举杯畅饮，&lt;br&gt;为了纪念人类这种生物。&lt;br&gt;善人恶人，无论世间变化，人类依旧重复。&lt;br&gt;在比腐烂要长久，比学习要短暂的时之螺旋上，所以才会如此渴望，才会如此好生是非吧？&lt;br&gt;生命为何？分明只是些拥有阳光、大地、诗歌便会完整的事物。&lt;/p&gt;

      
    
    </summary>
    
    
      <category term="摘录" scheme="https://tajpure.com/tags/%E6%91%98%E5%BD%95/"/>
    
  </entry>
  
</feed>
